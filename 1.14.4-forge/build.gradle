buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        jcenter()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.0.154'
        classpath 'pokechu22.test.begradle:begradle:0.2.3-SNAPSHOT:fg3'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'java'

version = "4.0.6.1-SNAPSHOT"
group = "wdl"
archivesBaseName = "WorldDownloader-forge"
libsDirName = "../../libs/${version}"


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
//apply plugin: 'pokechu22.test.begradle'
//apply plugin: 'pokechu22.test.customsrg'
apply plugin: 'pokechu22.test.langrenamer'
//apply plugin: 'pokechu22.test.noinplacereobf'
apply plugin: 'org.spongepowered.mixin'

repositories {
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
}

dependencies {
    compile 'org.spongepowered:mixin:0.8-SNAPSHOT'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:2.22.0'
    // Make sure that we have the Minecraft deps, at the correct versions
    // testCompile configurations.forgeGradleMcDeps
}

sourceSets {
    main
    test
    api
}

minecraft {
    //suppressMappingVersionWarnings = true
    mappings channel: 'snapshot', version: '20200208-1.15.1'
    runs {
        client {
            args("--mixin", "mixins.ForgeWDL.json")
            workingDirectory project.file('run')
            mods {
                wdl {
                    source sourceSets.main
                }
            }
        }
    }

    // We don't currently want a source jar (doesn't work well for base edits, and the version info doesn't work yet)
    //makeObfSourceJar = false
    // 1.13's json language files
    ext.jsonLangFiles = true
    // Copy one language to its variants
    ext.langMap = [
        'es_es': ['es_ar', 'es_cl', 'es_mx', 'es_uy', 'es_ve'],
        'fr_fr': ['fr_ca']
    ]
}

configurations {
    apiImplementation.extendsFrom implementation
}

dependencies {
    // Must be >= 28.1.23, as that version updated to a modlauncher build that works with mixin
    minecraft 'net.minecraftforge:forge:1.14.4-28.1.23'
}

sourceSets {
    main {
        java {
            compileClasspath += api.output
            runtimeClasspath += api.output
            srcDir "src/main/java"
            srcDir project(':1.14.4').file("src/main/java")
            srcDir project(':share_14').file("src/main/java")
            exclude "wdl/WDLChunkLoader_1_15.java"
            exclude "wdl/gui/widget/ExtGuiList_1_15.java"
            exclude "wdl/versioned/GameRules_1_14.java"
            exclude "wdl/versioned/Gui_1_15.java"
            exclude "wdl/versioned/Handlers_1_15.java"
            exclude "wdl/versioned/NBT_1_15.java"
        }
        resources {
            srcDir project(':share').file("src/main/resources")
            srcDir "src/main/resources"
        }
        // Refmap declaration must match the refmap name specified in the json config
        ext.refMap = "mixins.ForgeWDL.refmap.json"
    }
    test {
        java {
            compileClasspath += api.output
            runtimeClasspath += api.output
            srcDir project(':share_14').file("src/test/java")
            exclude "wdl/DelegateChunkManager_1_14.java"
            exclude "wdl/DelegateChunkManager_1_14_3.java"
            exclude "wdl/ExtWorld_1_14.java"
            exclude "wdl/ExtWorld_1_15.java"
            exclude "wdl/lwts/WDLTestTweaker_1_9.java"
            exclude "wdl/lwts/WDLTestTweaker_1_10.java"
            exclude "wdl/lwts/WDLTestTweaker.java"
        }
    }
    api {
        java {
            srcDir project(':share_14').file("src/api/java")
        }
    }
}
// We want Java 8 where possible
tasks.withType(JavaCompile) { javaTask ->
    javaTask.sourceCompatibility = "1.8"
    javaTask.targetCompatibility = "1.8"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

// Use tabs instead of spaces
/*fixMcSources {
    astyleConfig = "../astyle.cfg"
}*/

// Ensure that the API code is in the jar
jar {
    from sourceSets.api.output
    classifier = 'mc1.14.4'
    // Workaround for what appears to be a MixinGradle bug, where it fails at
    // https://git.io/Je9fm due to a groovy.lang.MissingMethodException
    // with SimpleFileCollection.from() and java.io.File.
    // The default refMaps is set at https://git.io/Je9fY, and apparently
    // configurableFiles() is deprecated nowadays with the replacement being
    // files().  No idea why configurableFiles() is used there, then; this works.
    ext.refMaps = files()
}

// Unit tests require native libraries to be available, which ForgeGradle
// doesn't do automatically...
test {
    dependsOn extractNatives
    systemProperty 'java.library.path', file('build/natives')
}
